;; Picos for OCaml 5

(rule
 (enabled_if
  (<= 5.0.0 %{ocaml_version}))
 (action
  (with-stdout-to
   picos.ml
   (progn
    (echo "# 1 \"lib/picos/picos.ocaml5.ml\"\n")
    (cat picos.ocaml5.ml)))))

;; Picos for OCaml 4

(executable
 (enabled_if
  (< %{ocaml_version} 5.0.0))
 (name generate_picos_ml_for_ocaml_4)
 (modules generate_picos_ml_for_ocaml_4))

(rule
 (enabled_if
  (< %{ocaml_version} 5.0.0))
 (deps
  computation.ocaml4.ml
  fiber.ocaml4.ml
  generate_picos_ml_for_ocaml_4.exe
  handler.ocaml4.ml
  picos.ocaml5.ml
  trigger.ocaml4.ml)
 (action
  (with-stdout-to
   picos.ml
   (run ./generate_picos_ml_for_ocaml_4.exe))))

;;

(rule
 (enabled_if
  (< %{ocaml_version} 5.0.0))
 (action
  (copy intf.ocaml4.ml intf.ml)))

(rule
 (enabled_if
  (<= 5.0.0 %{ocaml_version}))
 (action
  (copy intf.ocaml5.ml intf.ml)))

;;

(library
 (name picos)
 (public_name picos)
 (modules picos intf)
 (libraries backoff picos.thread))

(mdx
 (package picos_meta)
 (enabled_if
  (and
   (<= 4.14.0 %{ocaml_version})
   (< %{ocaml_version} 5.0.0)))
 (libraries picos picos_mux.thread picos_std.structured)
 (files picos.mli))

(mdx
 (package picos_meta)
 (enabled_if
  (<= 5.0.0 %{ocaml_version}))
 (libraries picos picos_mux.random picos_std.structured)
 (files picos.mli))

(documentation
 (package picos)
 (mld_files index))
